{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nconst types = {\n  email: {\n    regex: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/,\n    message: \"Email inválido\"\n  },\n  password: {\n    regex: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n    message: \"A senha precisa ter 1 caractere maiúsculo, 1 minúsculo, 1 dígito, 1 caractere especial e no mínimo 8 caracteres.\"\n  },\n  number: {\n    regex: /^\\d+$/,\n    message: \"Utilize apenas números\"\n  }\n};\n\nconst useForm = type => {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(null);\n\n  function validate(value) {\n    if (type === false) return true;\n\n    if (!value.length) {\n      setError(\"Preencha o campo\");\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(\"\");\n      return true;\n    }\n  }\n\n  function onChange(_ref) {\n    let {\n      target\n    } = _ref;\n    setValue(target.value);\n    if (error) validate(target.value);\n  }\n\n  function onBlur() {\n    validate(value);\n  }\n\n  return {\n    value,\n    setValue,\n    error,\n    onChange,\n    onBlur,\n    validate: () => validate(value)\n  };\n};\n\n_s(useForm, \"w7KQe9YxDw3azT2mRpMgdux3M4c=\");\n\nexport default useForm;","map":{"version":3,"names":["React","types","email","regex","message","password","number","useForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target","onBlur"],"sources":["C:/Users/gabri/Desktop/dogs-project/src/Hooks/useForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst types = {\r\n  email: {\r\n    regex: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/,\r\n    message: \"Email inválido\",\r\n  },\r\n  password: {\r\n    regex: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\r\n    message:\r\n      \"A senha precisa ter 1 caractere maiúsculo, 1 minúsculo, 1 dígito, 1 caractere especial e no mínimo 8 caracteres.\",\r\n  },\r\n  number: {\r\n    regex: /^\\d+$/,\r\n    message: \"Utilize apenas números\",\r\n  },\r\n};\r\n\r\nconst useForm = (type) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [error, setError] = React.useState(null);\r\n\r\n  function validate(value) {\r\n    if (type === false) return true;\r\n    if (!value.length) {\r\n      setError(\"Preencha o campo\");\r\n      return false;\r\n    } else if (types[type] && !types[type].regex.test(value)) {\r\n      setError(types[type].message);\r\n      return false;\r\n    } else {\r\n      setError(\"\");\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function onChange({ target }) {\r\n    setValue(target.value);\r\n    if (error) validate(target.value);\r\n  }\r\n\r\n  function onBlur() {\r\n    validate(value);\r\n  }\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    error,\r\n    onChange,\r\n    onBlur,\r\n    validate: () => validate(value),\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;IACLC,KAAK,EAAE,gDADF;IAELC,OAAO,EAAE;EAFJ,CADK;EAKZC,QAAQ,EAAE;IACRF,KAAK,EAAE,gEADC;IAERC,OAAO,EACL;EAHM,CALE;EAUZE,MAAM,EAAE;IACNH,KAAK,EAAE,OADD;IAENC,OAAO,EAAE;EAFH;AAVI,CAAd;;AAgBA,MAAMG,OAAO,GAAIC,IAAD,IAAU;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACW,QAAN,CAAe,IAAf,CAA1B;;EAEA,SAASG,QAAT,CAAkBL,KAAlB,EAAyB;IACvB,IAAID,IAAI,KAAK,KAAb,EAAoB,OAAO,IAAP;;IACpB,IAAI,CAACC,KAAK,CAACM,MAAX,EAAmB;MACjBF,QAAQ,CAAC,kBAAD,CAAR;MACA,OAAO,KAAP;IACD,CAHD,MAGO,IAAIZ,KAAK,CAACO,IAAD,CAAL,IAAe,CAACP,KAAK,CAACO,IAAD,CAAL,CAAYL,KAAZ,CAAkBa,IAAlB,CAAuBP,KAAvB,CAApB,EAAmD;MACxDI,QAAQ,CAACZ,KAAK,CAACO,IAAD,CAAL,CAAYJ,OAAb,CAAR;MACA,OAAO,KAAP;IACD,CAHM,MAGA;MACLS,QAAQ,CAAC,EAAD,CAAR;MACA,OAAO,IAAP;IACD;EACF;;EAED,SAASI,QAAT,OAA8B;IAAA,IAAZ;MAAEC;IAAF,CAAY;IAC5BR,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;IACA,IAAIG,KAAJ,EAAWE,QAAQ,CAACI,MAAM,CAACT,KAAR,CAAR;EACZ;;EAED,SAASU,MAAT,GAAkB;IAChBL,QAAQ,CAACL,KAAD,CAAR;EACD;;EAED,OAAO;IACLA,KADK;IAELC,QAFK;IAGLE,KAHK;IAILK,QAJK;IAKLE,MALK;IAMLL,QAAQ,EAAE,MAAMA,QAAQ,CAACL,KAAD;EANnB,CAAP;AAQD,CAnCD;;GAAMF,O;;AAqCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}